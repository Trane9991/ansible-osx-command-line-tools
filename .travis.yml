---
sudo: required
language: generic
matrix:
  include:
    - os: osx
      osx_image: xcode9.3
      env: ANSIBLE_VERSION=2.5.4
    - os: osx
      osx_image: xcode9.3
      env: ANSIBLE_VERSION=2.4.4.0
    - os: osx
      osx_image: xcode9.3
      env: ANSIBLE_VERSION=2.3.3.0
    - os: osx
      osx_image: xcode9.3
      env: ANSIBLE_VERSION=2.2.3.0
    - os: osx
      osx_image: xcode9.2
      env: ANSIBLE_VERSION=2.5.4
    - os: osx
      osx_image: xcode8.3
      env: ANSIBLE_VERSION=2.5.4
    - os: osx
      osx_image: xcode7.3
      env: ANSIBLE_VERSION=2.5.4
    - os: osx
      osx_image: xcode6.4
      env: ANSIBLE_VERSION=2.5.4

branches:
  only:
    - master
    - /^\d+\.\d+(\.\d+)?(-\S*)?$/

before_install:
  # Check Python version
  - which python
  - ls -l $(which python)
  - /usr/bin/python --version

  # Install pip
  - curl https://bootstrap.pypa.io/get-pip.py | sudo -H /usr/bin/python
  - pip --version

  # Setup pipenv
  - brew cleanup
  - sudo -H pip install -U pipenv
  - pipenv install --dev

  # Unwind the developer environment
  - URL=https://raw.githubusercontent.com/Homebrew/install/master/uninstall
  - curl -sLO "${URL}"
  - chmod +x uninstall
  - ./uninstall --force
  - rm -rf /usr/local/Homebrew
  - sudo rm -rf /usr/local/Caskroom
  - sudo rm -rf /usr/local/bin/brew
  - sudo rm -rf /Library/Developer/CommandLineTools

install:
  # Check versions
  - pipenv run python --version
  - pipenv run ansible --version
  - pipenv run ansible-lint --version
  - pipenv run py.test --version
  - pipenv run yamllint --version

script:
  # Check available releases
  - pipenv run python tests/version_check.py

  # Lint all YAML files.
  - pipenv run yamllint .

  # Check the role/playbook's syntax.
  - pipenv run ansible-playbook tests/playbook.yml --syntax-check

  # Lint the playbook.
  - pipenv run ansible-lint tests/playbook.yml

  # Test the playbook.
  - pipenv run ansible-playbook tests/playbook.yml

  # Test the playbook's idempotence.
  - idempotence=$(mktemp /private/tmp/XXXXXXXXX)
  - pipenv run ansible-playbook tests/playbook.yml | tee -a ${idempotence}
  - >-
      tail -25 ${idempotence} |
      grep -q 'changed=0.*failed=0' &&
      (echo 'Idempotence test: pass' && exit 0) ||
      (echo 'Idempotence test: fail' && exit 1)

  # Test host state
  - pipenv run py.test --connection=local --hosts=localhost --verbose tests

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
